var searchIndex = JSON.parse('{\
"block":{"doc":"Block","t":"DDMLLLLMFFLLLLMLLMLLLMMMLLLLLLMLL","n":["Block","SimpleBlock","block","borrow","borrow","borrow_mut","borrow_mut","data","empty_block","empty_fn","from","from","get_id","get_var","id","into","into","name","new","new","set_var","tags","tick","to_block","try_from","try_from","try_into","try_into","type_id","type_id","var","vzip","vzip"],"q":[[0,"block"],[33,"alloc::string"],[34,"core::option"],[35,"quickphf::map"],[36,"core::result"],[37,"core::any"]],"d":["","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,0,0,2,1,2,1,2,2,1,1,2,1,1,1,1,1,2,1,2,1,2,1,1,2,1],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,2],[1,3],[-1,-1,[]],[-1,-1,[]],[2,4],[[1,5],6],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],2],[[2,7,[8,[7,7]]],1],[[1,5,-1],3,[]],0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"SimpleBlock",0],[3,"Block",0],[15,"tuple"],[15,"u16"],[3,"String",33],[4,"Option",34],[15,"str"],[3,"PhfMap",35],[4,"Result",36],[3,"TypeId",37]]},\
"chunk":{"doc":"","t":"F","n":["add"],"q":[[0,"chunk"]],"d":[""],"i":[0],"f":[[[1,1],1]],"c":[],"p":[[15,"usize"]]},\
"core":{"doc":"","t":"AAAAAAHFFHFFHFFAAAAHFFHHFFHFFHFFAFFAFFRHCRHCHDRHCLLLLMMMMLLLLRHCRHCHDRHCLLLLMMMMLLLL","n":["blocks","items","register","AirBlock","DirtBlock","StoneBlock","NAME","load","new","NAME","load","new","NAME","load","new","DirtItem","IronIngotItem","IronOreItem","StoneItem","NAME","load","new","COLOR","NAME","load","new","NAME","load","new","NAME","load","new","blocks","create_block","create_item","items","load_block","load_item","AIR_BLOCK_ID","AIR_BLOCK_TAGS","AirBlock","DIRT_BLOCK_ID","DIRT_BLOCK_TAGS","DirtBlock","REGISTER_BLOCK","RegisterBlock","STONE_BLOCK_ID","STONE_BLOCK_TAGS","StoneBlock","borrow","borrow_mut","from","into","load","name","new","tags","try_from","try_into","type_id","vzip","DIRT_ITEM_ID","DIRT_ITEM_TAGS","DirtItem","IRON_INGOT_ITEM_ID","IRON_INGOT_ITEM_TAGS","IronIngotItem","REGISTER_ITEM","RegisterItem","STONE_ITEM_ID","STONE_ITEM_TAGS","StoneItem","borrow","borrow_mut","from","into","load","name","new","tags","try_from","try_into","type_id","vzip"],"q":[[0,"core"],[3,"core::blocks"],[6,"core::blocks::AirBlock"],[9,"core::blocks::DirtBlock"],[12,"core::blocks::StoneBlock"],[15,"core::items"],[19,"core::items::DirtItem"],[22,"core::items::IronIngotItem"],[26,"core::items::IronOreItem"],[29,"core::items::StoneItem"],[32,"core::register"],[38,"core::register::blocks"],[61,"core::register::items"],[84,"block"],[85,"item"],[86,"block"],[87,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9],"f":[0,0,0,0,0,0,0,[1,1],[1,1],0,[1,1],[1,1],0,[1,1],[1,1],0,0,0,0,0,[2,2],[2,2],0,0,[2,2],[2,2],0,[2,2],[2,2],0,[2,2],[2,2],0,[3,1],[3,2],0,[4,1],[5,2],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],0,0,0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],0,0,0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"SimpleBlock",84],[3,"SimpleItem",85],[15,"i32"],[3,"Block",84],[3,"Item",85],[4,"Result",86],[3,"TypeId",87],[3,"RegisterBlock",38],[3,"RegisterItem",61]]},\
"item":{"doc":"","t":"DDDLLLLLLMFFLLLLLMMLLLMMMLLMLMMMLLLLLLLLLMLLL","n":["InventoryData","Item","SimpleItem","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","data","empty_fn","empty_item","from","from","from","get_id","get_var","id","input","into","into","into","inventory","item","name","new","new","output","set_var","tags","tick","to_block","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","var","vzip","vzip","vzip"],"q":[[0,"item"],[45,"alloc::string"],[46,"core::option"],[47,"quickphf::map"],[48,"core::result"],[49,"core::any"]],"d":["","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,3,11,1,3,11,1,3,0,0,3,11,1,3,1,3,11,3,11,1,11,1,1,3,1,11,1,1,1,1,3,11,1,3,11,1,3,11,1,1,3,11,1],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,2],[1,3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[3,4],[[1,5],6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],3],[[3,7,[8,[7,7]]],1],0,[[1,5,-1],2,[]],0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"SimpleItem",0],[15,"tuple"],[3,"Item",0],[15,"u16"],[3,"String",45],[4,"Option",46],[15,"str"],[3,"PhfMap",47],[4,"Result",48],[3,"TypeId",49],[3,"InventoryData",0]]},\
"lang":{"doc":"","t":"F","n":["load_lang"],"q":[[0,"lang"],[1,"alloc::string"],[2,"twox_hash::sixty_four"],[3,"core::hash"],[4,"std::collections::hash::map"]],"d":[""],"i":[0],"f":[[1,[[5,[2,2,[4,[3]]]]]]],"c":[],"p":[[15,"str"],[3,"String",1],[3,"XxHash64",2],[3,"BuildHasherDefault",3],[3,"HashMap",4]]},\
"life_traveler":{"doc":"","t":"F","n":["main"],"q":[[0,"life_traveler"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[15,"tuple"]]},\
"macro_register":{"doc":"Macro Reg","t":"OOOOXX","n":["add_lang","add_lang_from_file","add_tag","add_tag_from_file","register","register_complement"],"q":[[0,"macro_register"]],"d":["","","","","This macro is used to register a block, item, entity, etcâ€¦",""],"i":[0,0,0,0,0,0],"f":[0,0,0,0,0,0],"c":[],"p":[]},\
"region":{"doc":"","t":"F","n":["add"],"q":[[0,"region"]],"d":[""],"i":[0],"f":[[[1,1],1]],"c":[],"p":[[15,"usize"]]},\
"world":{"doc":"","t":"F","n":["add"],"q":[[0,"world"]],"d":[""],"i":[0],"f":[[[1,1],1]],"c":[],"p":[[15,"usize"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
