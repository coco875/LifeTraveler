var searchIndex = JSON.parse('{\
"block":{"doc":"Block","t":"DDMLLLLFFLLLLMLLMLLLMMMLLLLLLMLL","n":["Block","SimpleBlock","block","borrow","borrow","borrow_mut","borrow_mut","empty_block","empty_fn","from","from","get_id","get_var","id","into","into","name","new","new","set_var","tags","tick","to_block","try_from","try_from","try_into","try_into","type_id","type_id","var","vzip","vzip"],"q":[[0,"block"],[32,"alloc::string"],[33,"serde::de"],[34,"quickphf::map"],[35,"serde::ser"],[36,"core::result"],[37,"core::any"]],"d":["","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a variable/attribute of the item","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Set a variable/attribute of the item","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,0,0,2,1,2,1,2,2,1,1,2,1,1,1,1,1,2,1,2,1,2,1,1,2,1],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[1,3],[-1,-1,[]],[-1,-1,[]],[2,4],[[1,5],-1,6],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],2],[[2,7,[8,[7,7]]],1],[[1,5,-1],3,9],0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"SimpleBlock",0],[3,"Block",0],[15,"tuple"],[15,"u16"],[3,"String",32],[8,"Deserialize",33],[15,"str"],[3,"PhfMap",34],[8,"Serialize",35],[4,"Result",36],[3,"TypeId",37]]},\
"chunk":{"doc":"","t":"F","n":["add"],"q":[[0,"chunk"]],"d":[""],"i":[0],"f":[[[1,1],1]],"c":[],"p":[[15,"usize"]]},\
"core":{"doc":"","t":"AAAAAAHFFHFFHFFAAAAHFFHHFFHFFHFFAFFAFFRHCRHCHDRHCLLLLMMMMLLLLRHCRHCHDRHCLLLLMMMMLLLL","n":["blocks","items","register","AirBlock","DirtBlock","StoneBlock","NAME","load","new","NAME","load","new","NAME","load","new","DirtItem","IronIngotItem","IronOreItem","StoneItem","NAME","load","new","COLOR","NAME","load","new","NAME","load","new","NAME","load","new","blocks","create_block","create_item","items","load_block","load_item","AIR_BLOCK_ID","AIR_BLOCK_TAGS","AirBlock","DIRT_BLOCK_ID","DIRT_BLOCK_TAGS","DirtBlock","REGISTER_BLOCK","RegisterBlock","STONE_BLOCK_ID","STONE_BLOCK_TAGS","StoneBlock","borrow","borrow_mut","from","into","load","name","new","tags","try_from","try_into","type_id","vzip","DIRT_ITEM_ID","DIRT_ITEM_TAGS","DirtItem","IRON_INGOT_ITEM_ID","IRON_INGOT_ITEM_TAGS","IronIngotItem","REGISTER_ITEM","RegisterItem","STONE_ITEM_ID","STONE_ITEM_TAGS","StoneItem","borrow","borrow_mut","from","into","load","name","new","tags","try_from","try_into","type_id","vzip"],"q":[[0,"core"],[3,"core::blocks"],[6,"core::blocks::AirBlock"],[9,"core::blocks::DirtBlock"],[12,"core::blocks::StoneBlock"],[15,"core::items"],[19,"core::items::DirtItem"],[22,"core::items::IronIngotItem"],[26,"core::items::IronOreItem"],[29,"core::items::StoneItem"],[32,"core::register"],[38,"core::register::blocks"],[61,"core::register::items"],[84,"block"],[85,"item"],[86,"block"],[87,"core::any"]],"d":["Blocks are the basic elements of the game. They are used …","Items are the basic building blocks of the game. They are …","Interfaces for registering blocks and items","","","","","","","automatically generated by macro_reg this variable is the …","","automatically generated by macro_reg this function is …","automatically generated by macro_reg this variable is the …","automatically generated by macro_reg this function is …","automatically generated by macro_reg this function is …","","","","","automatically generated by macro_reg this variable is the …","automatically generated by macro_reg this function is …","automatically generated by macro_reg this function is …","","automatically generated by macro_reg this variable is the …","automatically generated by macro_reg this function is …","automatically generated by macro_reg this function is …","","automatically generated by macro_reg this function is …","automatically generated by macro_reg this function is …","","","","","Create a block from an id","Create an item from an id","","Load a block from a Block struct","Load an item from an Item struct","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10],"f":[0,0,0,0,0,0,0,[1,1],[1,1],0,[1,1],[1,1],0,[1,1],[1,1],0,0,0,0,0,[2,2],[2,2],0,0,[2,2],[2,2],0,[2,2],[2,2],0,[2,2],[2,2],0,[3,1],[4,2],0,[5,1],[6,2],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"SimpleBlock",84],[3,"SimpleItem",85],[15,"u16"],[15,"i32"],[3,"Block",84],[3,"Item",85],[4,"Result",86],[3,"TypeId",87],[3,"RegisterBlock",38],[3,"RegisterItem",61]]},\
"item":{"doc":"Item","t":"DDLLLLFFLLLLMLLMMLLLMMMLLLLLLMLL","n":["Item","SimpleItem","borrow","borrow","borrow_mut","borrow_mut","empty_fn","empty_item","from","from","get_id","get_var","id","into","into","item","name","new","new","set_var","tags","tick","to_block","try_from","try_from","try_into","try_into","type_id","type_id","var","vzip","vzip"],"q":[[0,"item"],[32,"alloc::string"],[33,"serde::de"],[34,"quickphf::map"],[35,"serde::ser"],[36,"core::result"],[37,"core::any"]],"d":["The basic struct for an item","The simple struct for an item","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a variable/attribute of the item","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The item","The name/id of the item","","Create a new simple item","Set a variable/attribute of the item","The static tags","The function to tick the item","The function to convert the simple item to an item","","","","","","","The dynamic tags/attributes","",""],"i":[0,0,3,1,3,1,0,0,3,1,3,1,3,3,1,1,1,3,1,1,1,1,1,3,1,3,1,3,1,1,3,1],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[1,3],[-1,-1,[]],[-1,-1,[]],[3,4],[[1,5],-1,6],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],3],[[3,7,[8,[7,7]]],1],[[1,5,-1],2,9],0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"SimpleItem",0],[15,"tuple"],[3,"Item",0],[15,"u16"],[3,"String",32],[8,"Deserialize",33],[15,"str"],[3,"PhfMap",34],[8,"Serialize",35],[4,"Result",36],[3,"TypeId",37]]},\
"lang":{"doc":"Lang","t":"F","n":["load_lang"],"q":[[0,"lang"],[1,"alloc::string"],[2,"twox_hash::sixty_four"],[3,"core::hash"],[4,"std::collections::hash::map"]],"d":["Load a lang file"],"i":[0],"f":[[1,[[5,[2,2,[4,[3]]]]]]],"c":[],"p":[[15,"str"],[3,"String",1],[3,"XxHash64",2],[3,"BuildHasherDefault",3],[3,"HashMap",4]]},\
"life_traveler":{"doc":"","t":"F","n":["main"],"q":[[0,"life_traveler"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[15,"tuple"]]},\
"macro_register":{"doc":"Macro Reg","t":"OOOOXX","n":["add_lang","add_lang_from_file","add_tag","add_tag_from_file","register","register_complement"],"q":[[0,"macro_register"]],"d":["This macro is used to add a lang to a block, item, entity, …","This macro is used to add a lang to a block, item, entity, …","This macro is used to add a tag to a block, item, entity, …","This macro is used to add a tag to a block, item, entity, …","This macro is used to register a block, item, entity, etc…","This macro is used to register a block, item, entity, etc…"],"i":[0,0,0,0,0,0],"f":[0,0,0,0,0,0],"c":[],"p":[]},\
"region":{"doc":"","t":"F","n":["add"],"q":[[0,"region"]],"d":[""],"i":[0],"f":[[[1,1],1]],"c":[],"p":[[15,"usize"]]},\
"render":{"doc":"","t":"F","n":["run"],"q":[[0,"render"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[15,"tuple"]]},\
"world":{"doc":"","t":"F","n":["add"],"q":[[0,"world"]],"d":[""],"i":[0],"f":[[[1,1],1]],"c":[],"p":[[15,"usize"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
